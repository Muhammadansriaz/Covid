{"version":3,"sources":["Images/covidlogo.png","Api/Api.js","Header/Header.js","Covid stat/CovidStat.js","Bar.js","Pie.js","Chart/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["url","fetchData","country","a","changeableUrl","axios","get","data","requiredData","confirmed","recovered","deaths","console","log","fetchContriesData","countries","countriesList","map","name","Header","handleCountryChange","useState","countriesData","setCountriesData","useEffect","fetchCountries","className","src","logo","alt","variant","defaultValue","onChange","e","target","value","index","CovidStat","date","Date","Typography","start","end","duration","separator","getDate","getMonth","getFullYear","BarChart","caseData","labels","datasets","label","backgroundColor","borderColor","borderWidth","height","width","options","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","PieChart","Chart","App","setCaseData","setCountry","fetchedDataGlobal","fetchedData","dataFetched","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7a9cfde.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/covidlogo.8ad205b8.png\";","import axios from \"axios\";\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const  data  = await axios.get(changeableUrl);\r\n\r\n        const requiredData = {\r\n            confirmed: data.data.confirmed,\r\n            recovered: data.data.recovered,\r\n            deaths: data.data.deaths,\r\n        }\r\n        return requiredData;\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const dailyDataStats = data.map((data) => ({\r\n            confirmed: data.confirmed.total,\r\n            deaths: data.deaths.total,\r\n            date: data.reportDate,\r\n            recovered: data.recovered.total\r\n        }))\r\n        console.log(dailyDataStats);\r\n        return dailyDataStats;\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const fetchContriesData = async () => {\r\n    try {\r\n        const { data : {countries} } = await axios.get(`${url}/countries`);\r\n\r\n        const countriesList = countries.map((country) => country.name);\r\n        \r\n        return countriesList;\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"../Images/covidlogo.png\";\r\nimport { fetchContriesData } from \"../Api/Api\";\r\n\r\nconst Header = ({ handleCountryChange }) => {\r\n  const [countriesData, setCountriesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchCountries() {\r\n      setCountriesData(await fetchContriesData());\r\n    }\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"title\">\r\n        <h1>C</h1>\r\n        <img src={logo} alt=\"O\" />\r\n        <h1>VID_19</h1>\r\n      </div>\r\n      <div className=\"select\">\r\n        <select\r\n          variant=\"outlined\"\r\n          className=\"country-select\"\r\n          defaultValue=\"\"\r\n          onChange={(e) => {\r\n            handleCountryChange(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"global\">Global</option>\r\n          {countriesData.map((country, index) => (\r\n            <option key={index} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./CovidStat.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst CovidStat = ({ data }) => {\r\n  let date = new Date();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"Card\">\r\n        <div className=\"Card_inner active\">\r\n          <h3>Confirm Cases</h3>\r\n          <Typography className=\"inner\">\r\n            {\r\n              <CountUp\r\n                start={0}\r\n                end={data.confirmed.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            }\r\n          </Typography>\r\n          <p>\r\n            Dated: {date.getDate()}-{date.getMonth() + 1}-{date.getFullYear()}\r\n          </p>\r\n        </div>\r\n        <div className=\"Card_inner recover\">\r\n          <h3>Recovries</h3>\r\n          <Typography className=\"inner\">\r\n            {\r\n              <CountUp\r\n                start={0}\r\n                end={data.recovered.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            }\r\n          </Typography>\r\n          <p>\r\n            Dated: {date.getDate()}-{date.getMonth() + 1}-{date.getFullYear()}\r\n          </p>\r\n        </div>\r\n        <div className=\"Card_inner death\">\r\n          <h3>Deaths</h3>\r\n          <Typography className=\"inner\">\r\n            {\r\n              <CountUp\r\n                start={0}\r\n                end={data.deaths.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            }\r\n          </Typography>\r\n          <p>\r\n            Dated: {date.getDate()}-{date.getMonth() + 1}-{date.getFullYear()}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidStat;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport './Bar.css'\r\n\r\n\r\nconst BarChart = ({ caseData, country,  }) => {\r\n\r\n    \r\n    const data = {\r\n        labels:  ['Confirmed', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            data: [caseData.confirmed.value, caseData.recovered.value, caseData.deaths.value],\r\n            backgroundColor: [\r\n              '#f09819',\r\n              '#5ab331',\r\n              'rgb(165 0 0)',\r\n              \r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n  \r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  \r\n    return (\r\n        <div className = \"barbox\">\r\n             <Bar height = {300} width = {250} data={data} options={options} options={{ maintainAspectRatio: false }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChart\r\n","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport './Pie.css'\r\n\r\nconst PieChart = ({ caseData, country,  }) => {\r\n    const data = {\r\n        labels:  ['Confirmed', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            data: [caseData.confirmed.value, caseData.recovered.value, caseData.deaths.value],\r\n            backgroundColor: [\r\n              '#f09819',\r\n              '#5ab331',\r\n              'rgb(165 0 0)',\r\n              \r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      \r\n    return (\r\n      <div  className = 'piebox'>\r\n        <Pie data={data} width = {400} height = {400} options={{ maintainAspectRatio: false }}/>\r\n\r\n      </div>\r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default PieChart\r\n","import { useState, useEffect } from \"react\";\r\nimport { fetchData } from \"../Api/Api\";\r\nimport BarChart from '../Bar'\r\nimport PieChart from '../Pie'\r\n\r\nimport './Chart.css';\r\n\r\n\r\nfunction Chart({ caseData, country,  }) {\r\n\r\n    return (\r\n        <div className='cntainer' >\r\n            {country =='global' ? <PieChart caseData={caseData} country={country}/> : <BarChart caseData={caseData} country={country}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n\r\n","import \"./App.css\";\r\nimport Header from \"./Header/Header\";\r\nimport CovidStat from \"./Covid stat/CovidStat\";\r\nimport { fetchData } from \"./Api/Api\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Chart from './Chart/Chart'\r\n\r\nfunction App() {\r\n  const [caseData, setCaseData] = useState({\r\n    confirmed: { value: 0 },\r\n    recovered: { value: 0 },\r\n    deaths: { value: 0 },\r\n  });\r\n\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function dataFetched() {\r\n      const fetchedData = await fetchData();\r\n\r\n      setCaseData(fetchedData);\r\n      setCountry(\"global\");\r\n    }\r\n    dataFetched();\r\n  }, []);\r\n\r\n  async function handleCountryChange(country) {\r\n    const fetchedDataGlobal = await fetchData();\r\n\r\n    if (country === \"global\") {\r\n      setCaseData(fetchedDataGlobal);\r\n      setCountry(\"global\");\r\n    } else {\r\n      const fetchedData = await fetchData(country);\r\n      setCaseData(fetchedData);\r\n      setCountry(fetchedData);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header handleCountryChange={handleCountryChange} />\r\n      <div className=\"section\">\r\n        <CovidStat data={caseData} />\r\n      </div>\r\n      <div className = 'chart_container'>\r\n\r\n        <Chart caseData={caseData} country={country}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}